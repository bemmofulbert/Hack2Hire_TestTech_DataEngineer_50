services:
  postgresdb:
    image: postgres
    container_name: postgresdb
    hostname: postgresdb
    networks:
           default:
                ipv4_address: 172.18.0.2
    restart: unless-stopped
    env_file: ./.env
    environment:
      - POSTGRES_USER=$POSTGRESDB_USER
      - POSTGRES_PASSWORD=$POSTGRESDB_ROOT_PASSWORD
      - POSTGRES_DB=$POSTGRESDB_DATABASE
    ports:
      - $POSTGRESDB_LOCAL_PORT:$POSTGRESDB_DOCKER_PORT
    volumes:
      - db:/var/lib/postgres
  backend:
    hostname: backend
    depends_on:
      - postgresdb
    build: ./backend
    #restart: unless-stopped
    env_file: ./.env
    ports:
      - $NODE_LOCAL_PORT:$NODE_DOCKER_PORT
    environment:
      - DB_HOST=postgresdb
      - DB_USER=$POSTGRESDB_USER
      - DB_PASSWORD=$POSTGRESDB_ROOT_PASSWORD
      - DB_NAME=$POSTGRESDB_DATABASE
      - DB_PORT=$POSTGRESDB_DOCKER_PORT
      - DATABASE_URL=$DATABASE_URL
    stdin_open: false
    tty: true
    #command: "npm run migrate:up & return 0;"
    networks:
           default:
                ipv4_address: 172.18.0.3
  app:
    hostname: sn_weather_script
    depends_on:
      - backend
    build: ./script_sn_weather
    env_file: ./.env
    #ports:
      #- $NODE_LOCAL_PORT:$NODE_DOCKER_PORT
    environment:
      - HOST_API=$HOST_API
      - HOST_WEATHER_API=$HOST_WEATHER_API
      - API_KEY=$API_KEY
    #stdin_open: false
    #tty: false
    networks:
           default:
                ipv4_address: 172.18.0.4

volumes: 
  db:
networks:
  default:
    driver: bridge
    ipam:
      config:
        - subnet: 172.18.0.0/16

